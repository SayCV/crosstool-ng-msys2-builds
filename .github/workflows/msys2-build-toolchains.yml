---
name: Build toolchains

on:
  workflow_call:
    inputs:
      samples:
        description: Stringified JSON list of samples
        required: true
        type: string
      canadian-cross:
        description: Build Canadian Cross toolchain(x86_64-w64-mingw32)
        default: false
        required: false
        type: boolean

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - preset: win64-release
            os: windows-latest

    runs-on: ${{ matrix.os }}
    steps:
    - run: git config --global core.autocrlf input
    - name: create case sensitive workspace volume for windows
      if: ${{ runner.os == 'Windows' }}
      run: |
        cd ..
        fsutil file SetCaseSensitiveInfo crosstool-ng-msys2-builds enable
        cd crosstool-ng-msys2-builds

    - uses: actions/checkout@v4
      with:
        repository: 'crosstool-ng/crosstool-ng'
        ref: 'master'
        fetch-depth: 0

    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          bison flex gperf help2man libtool-bin meson ninja-build texinfo

    - name: build for ${{ matrix.preset }}
      shell: msys2 {0}
      run: |
        uname -a
        mkdir -p src
        ct-ng ${{ matrix.sample }}
        sed -i -e '/CT_LOG_PROGRESS_BAR/s/y$/n/' .config
        sed -i -e '/CT_LOCAL_TARBALLS_DIR/s/HOME/CT_TOP_DIR/' .config
        sed -i -e '/CT_PREFIX_DIR/s/HOME/CT_TOP_DIR/' .config
        sed -i -e '/CT_GLIBC_ENABLE_DEBUG/s/y$/n/' .config
        test ${{ matrix.host }} = "macos-12" && sed -i -e '/CT_GDB_CROSS_PYTHON/s/y$/n/' .config
        ct-ng build

    - name: Zip artifact for deployment
      run: |
        if ($env:RUNNER_OS -eq "Windows") {
          7z a crosstool-ng-${{ matrix.preset }}.zip install/${{ matrix.preset }}
        } else {
          zip -r crosstool-ng-${{ matrix.preset }}.zip install/${{ matrix.preset }}
        }

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: 'archives'
        path: crosstool-ng-${{ matrix.preset }}.zip


  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: 'archives'
        path: ./
    - name: Display structure of downloaded files
      run: ls -R

    - name: Upload to Release
      id: upload_to_release
      uses: softprops/action-gh-release@v1
      with:
        files: "*.zip"
